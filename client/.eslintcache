[{"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\index.js":"1","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\reportWebVitals.js":"2","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\App.js":"3","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Home.js":"4","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\SinglePost.js":"5","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Login.js":"6","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Signup.js":"7","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Profile.js":"8","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\Footer\\index.js":"9","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\Header\\index.js":"10","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\queries.js":"11","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\mutations.js":"12","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\auth.js":"13","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\CommentList\\index.js":"14","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\PostList\\index.js":"15","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\CommentForm\\index.js":"16","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\PostForm\\index.js":"17"},{"size":500,"mtime":1652379727303,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1652379727305,"results":"20","hashOfConfig":"19"},{"size":2155,"mtime":1652379727280,"results":"21","hashOfConfig":"19"},{"size":621,"mtime":1652379727304,"results":"22","hashOfConfig":"19"},{"size":1612,"mtime":1652379727305,"results":"23","hashOfConfig":"19"},{"size":2512,"mtime":1652379727304,"results":"24","hashOfConfig":"19"},{"size":2667,"mtime":1652379727305,"results":"25","hashOfConfig":"19"},{"size":1704,"mtime":1652379727304,"results":"26","hashOfConfig":"19"},{"size":462,"mtime":1652379727300,"results":"27","hashOfConfig":"19"},{"size":1268,"mtime":1652379727301,"results":"28","hashOfConfig":"19"},{"size":922,"mtime":1652379727307,"results":"29","hashOfConfig":"19"},{"size":1114,"mtime":1652379727307,"results":"30","hashOfConfig":"19"},{"size":1043,"mtime":1652379727306,"results":"31","hashOfConfig":"19"},{"size":955,"mtime":1652379727300,"results":"32","hashOfConfig":"19"},{"size":1953,"mtime":1652379727302,"results":"33","hashOfConfig":"19"},{"size":2386,"mtime":1652379727299,"results":"34","hashOfConfig":"19"},{"size":3593,"mtime":1652379727302,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mfhtdr",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\index.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\reportWebVitals.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\App.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Home.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\SinglePost.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Login.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Signup.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\pages\\Profile.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\Header\\index.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\queries.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\mutations.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\utils\\auth.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\CommentList\\index.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\PostList\\index.js",[],"C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\CommentForm\\index.js",["72"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_COMMENT } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\nconst CommentForm = ({ postId }) => {\n  const [commentText, setCommentText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addComment, { error }] = useMutation(ADD_COMMENT);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addComment({\n        variables: {\n          postId,\n          commentText,\n          commentAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setCommentText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'commentText' && value.length <= 280) {\n      setCommentText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Share some love on this Lego set!</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"commentText\"\n                placeholder=\"Add your comment...\"\n                value={commentText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Comment\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to comment. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default CommentForm;\n","C:\\Users\\hsuza\\Desktop\\code\\projects\\BrickBlog\\client\\src\\components\\PostForm\\index.js",["73"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_POST } from '../../utils/mutations';\nimport { QUERY_POSTS, QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\n\n\nconst PostForm = () => {\n  const [postText, setPostText] = useState('');\n  const [postImage, setPostImage] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addPost, { error }] = useMutation(ADD_POST, {\n    update(cache, { data: { addPost } }) {\n      try {\n        const { posts } = cache.readQuery({ query: QUERY_POSTS });\n\n        cache.writeQuery({\n          query: QUERY_POSTS,\n          data: { posts: [addPost, ...posts] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n\n      // update me object's cache\n      const { me } = cache.readQuery({ query: QUERY_ME });\n      cache.writeQuery({\n        query: QUERY_ME,\n        data: { me: { ...me, posts: [...me.posts, addPost] } },\n      });\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addPost({\n        variables: {\n          postText,\n          postImage,\n          postAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setPostText('');\n      setPostImage('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'postText' && value.length <= 280) {\n      setPostText(value);\n      setCharacterCount(value.length);\n    }\n\n    if (name === 'postImage' && value.length <= 500) {\n      setPostImage(value);\n    }\n  };\n  \n\n  return (\n    <div>\n      <h3>Share a new post!</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 280 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/280\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"postText\"\n                placeholder=\"Here's a new post...\"\n                value={postText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n\n              \n            </div>\n\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"postImage\"\n                placeholder=\"Provide a new image URL\"\n                value={postImage}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n\n              \n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Add Post\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to share your posts. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PostForm;\n",{"ruleId":"74","severity":1,"message":"75","line":19,"column":15,"nodeType":"76","messageId":"77","endLine":19,"endColumn":19},{"ruleId":"74","severity":1,"message":"75","line":43,"column":15,"nodeType":"76","messageId":"77","endLine":43,"endColumn":19},"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar"]