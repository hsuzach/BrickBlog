{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hsuza\\\\Desktop\\\\code\\\\projects\\\\BrickBlog\\\\client\\\\src\\\\App.js\";\nimport React from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SinglePost from './pages/SinglePost';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer'; // Construct our main GraphQL API endpoint\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n}); // Construct request middleware that will attach the JWT token to every request as an `authorization` header\n\nconst authLink = setContext((_, _ref) => {\n  let {\n    headers\n  } = _ref;\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token'); // return the headers to the context so httpLink can read them\n\n  return {\n    headers: { ...headers,\n      authorization: token ? `Bearer ${token}` : ''\n    }\n  };\n});\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-column justify-flex-start min-100-vh\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/\",\n            children: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/login\",\n            children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/me\",\n            children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/profiles/:username\",\n            children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            exact: true,\n            path: \"/posts/:postId\",\n            children: /*#__PURE__*/_jsxDEV(SinglePost, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","ApolloClient","InMemoryCache","ApolloProvider","createHttpLink","setContext","BrowserRouter","Router","Route","Home","Signup","Login","SinglePost","Profile","Header","Footer","httpLink","uri","authLink","_","headers","token","localStorage","getItem","authorization","client","link","concat","cache","App"],"sources":["C:/Users/hsuza/Desktop/code/projects/BrickBlog/client/src/App.js"],"sourcesContent":["import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Home from './pages/Home';\nimport Signup from './pages/Signup';\nimport Login from './pages/Login';\nimport SinglePost from './pages/SinglePost';\nimport Profile from './pages/Profile';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n// Construct our main GraphQL API endpoint\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\n// Construct request middleware that will attach the JWT token to every request as an `authorization` header\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('id_token');\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  // Set up our client to execute the `authLink` middleware prior to making the request to our GraphQL API\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"flex-column justify-flex-start min-100-vh\">\n          <Header />\n          <div className=\"container\">\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route exact path=\"/login\">\n              <Login />\n            </Route>\n            <Route exact path=\"/signup\">\n              <Signup />\n            </Route>\n            <Route exact path=\"/me\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/profiles/:username\">\n              <Profile />\n            </Route>\n            <Route exact path=\"/posts/:postId\">\n              <SinglePost />\n            </Route>\n          </div>\n          <Footer />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,cAJF,QAKO,gBALP;AAMA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,QAA+C,kBAA/C;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CAEA;;;AACA,MAAMC,QAAQ,GAAGZ,cAAc,CAAC;EAC9Ba,GAAG,EAAE;AADyB,CAAD,CAA/B,C,CAIA;;AACA,MAAMC,QAAQ,GAAGb,UAAU,CAAC,CAACc,CAAD,WAAoB;EAAA,IAAhB;IAAEC;EAAF,CAAgB;EAC9C;EACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAd,CAF8C,CAG9C;;EACA,OAAO;IACLH,OAAO,EAAE,EACP,GAAGA,OADI;MAEPI,aAAa,EAAEH,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;IAFpC;EADJ,CAAP;AAMD,CAV0B,CAA3B;AAYA,MAAMI,MAAM,GAAG,IAAIxB,YAAJ,CAAiB;EAC9B;EACAyB,IAAI,EAAER,QAAQ,CAACS,MAAT,CAAgBX,QAAhB,CAFwB;EAG9BY,KAAK,EAAE,IAAI1B,aAAJ;AAHuB,CAAjB,CAAf;;AAMA,SAAS2B,GAAT,GAAe;EACb,oBACE,QAAC,cAAD;IAAgB,MAAM,EAAEJ,MAAxB;IAAA,uBACE,QAAC,MAAD;MAAA,uBACE;QAAK,SAAS,EAAC,2CAAf;QAAA,wBACE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAK,SAAS,EAAC,WAAf;UAAA,wBACE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,GAAlB;YAAA,uBACE,QAAC,IAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QADF,eAIE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,QAAlB;YAAA,uBACE,QAAC,KAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAJF,eAOE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,SAAlB;YAAA,uBACE,QAAC,MAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAPF,eAUE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,KAAlB;YAAA,uBACE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAVF,eAaE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,qBAAlB;YAAA,uBACE,QAAC,OAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAbF,eAgBE,QAAC,KAAD;YAAO,KAAK,MAAZ;YAAa,IAAI,EAAC,gBAAlB;YAAA,uBACE,QAAC,UAAD;cAAA;cAAA;cAAA;YAAA;UADF;YAAA;YAAA;YAAA;UAAA,QAhBF;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAsBE,QAAC,MAAD;UAAA;UAAA;UAAA;QAAA,QAtBF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AA8BD;;KA/BQI,G;AAiCT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}